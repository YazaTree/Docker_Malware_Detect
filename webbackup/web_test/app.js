var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');


var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// port setup
app.set('port', process.env.PORT || 9000);

// mongoose 설정
//app.use(logger('dev'));
const mongoose = require('mongoose')
const morgan = require('morgan')

// DB
const test_db = require('./models/test');

mongoose.connect(
  'mongodb://127.0.0.1:27017',
  {
    dbName: "Dockerweb",
    useNewUrlParser: true,
    useUnifiedTopology: true,
  }
)

const db = mongoose.connection
db.on('error', console.error)
db.once('open', () => {
  console.log('Connected to mongodb Server')
})


const a = db.collection('dynamic').find()
console.log(a)

app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

// var fs = require('fs');
// app.get('/result', function(req,res){
//   fs.readFile('result.html',function(error,data) {
//     res.writeHead(200, {'Content-Type': 'text/html'});
//     res.end(data);
//   });
// });

app.get('/', indexRouter);
app.post('/', (req, res) => {
  db.collection('dynamic').findOne({ "docker_img": req.body.search_box }, (err, data) => {
    if (!data) {
      db.collection('docker_img').findOne({ "ImageName": req.body.search_box }, (err, data2) => {
        if (!data2){
          db.collection('docker_img').insertOne({ ImageName: req.body.search_box }, (err, result) => {
            console.log('저장이 완료 되었습니다.');})
        }
        else {
          console.log('기존 데이터를 찾았습니다.');
          return res.json({
            dbSuccess: "True",
            message: "Data Found"
          })
        }
        
    });
      res.redirect('/result.html');
      return res.json({
        dbSuccess: false,
        message: req.body.search_box
      });
    }
    else {
      
      console.log('기존 데이터를 찾았습니다.');
      res.redirect('/result.html');
      return res.json({
        dbSuccess: "True",
        message: "Data Found"
      })
    }
  
  });
});


app.use('/users', usersRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {

    next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});



module.exports = app;

var server = app.listen(app.get('port'), function () {

  console.log('Express server listening on port ' + server.address().port);

});



