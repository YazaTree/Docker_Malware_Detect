from pymongo import MongoClient
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from PyPDF2 import PdfWriter, PdfReader

#MongoDB 연결 설정
client = MongoClient('mongoDB 주소')
db = client['DB명']
collection = db['collection명']

#PDF 생성 함수
def create_pdf(data):
    pdf_path = 'output.pdf' #생성할 PDF 파일 경로
    signage_pdf_path = 'signage.pdf' #표지 파일 경로

    #폰트 등록(함초롱바탕으로 등록)
    font_path = 'HANBatang.ttf'
    pdfmetrics.registerFont(TTFont("HANBatang", font_path))

    #기타 설정
    c = canvas.Canvas(pdf_path)
    c.setFont("HANBatang", 12) #등록한 폰트 사용

    #데이터로 PDF에 내용 추가
    #PDF 뒷 장부터 한글 깨지는 오류 해결
    for index, item in enumerate(data):
        if index != 0:
            c.showPage() #페이지 추가
            c.setFont("HANBatang", 12)

        c.drawString(100, 700, f"제목: {item['title']}")
        c.drawString(100, 680, f"내용: {item['content']}")
        #c.showPage() #페이지 추가

    c.save() #PDF 저장
    print(f"PDF 파일이 생성되었습니다: {pdf_path}")

    #표지 추가
    output_pdf = PdfWriter()
    output_pdf.add_page(PdfReader(signage_pdf_path).pages[0])  #표지 파일의 첫 번째 페이지 삽입

    with open(pdf_path, 'rb') as content_file:
        content_pdf = PdfReader(content_file)
        for page in content_pdf.pages:
            output_pdf.add_page(page)

        with open('output.pdf', 'wb') as output_file:
            output_pdf.write(output_file)

    print("PDF 파일에 표지가 추가되었습니다.")

'''
#MongoDB에서 데이터 가져오기
data = collection.find({})  #쿼리에 조건 추가해서 데이터 가져오기 가능

#PDF 생성
create_pdf(data)
'''


#더미값 넣어서 테스트
dummy_data = [
    {"title": "더미 제목 1", "content": "더미 내용 1"},
    {"title": "더미 제목 2", "content": "더미 내용 2"},
    {"title": "더미 제목 3", "content": "더미 내용 3"},
]

create_pdf(dummy_data)


'''
#변경 사항(새로운 레코드 추가)있을 때만 create_pdf() 호출함
def process_change(change):
    if change['operationType'] == 'insert':
        data = [change['fullDocument']] #새로운 레코드만 처리하도록 데이터 구성
        create_pdf(data)

#모니터링
with collection.watch(full_document='updateLookup') as stream: #모든 변경 사항 모니터링
    for change in stream:
        process_change(change)
'''