from pymongo import MongoClient
import sys
sys.path.append('/home/ubuntu/docker_sandbox/sandbox')
sys.path.append('/home/ubuntu/docker_sandbox/static_analysis')
sys.path.append('/home/ubuntu/docker_sandbox/report')
import report
import sandbox
import static_analysis
import time
def main():

    # Connect to MongoDB
    client = MongoClient('', 27017)

    # Access the databasec
    db = client['Dockerweb']

    # Access the collection
    collection = db['docker_img']

    # Define projection to include or exclude fields
    projection = {
        '_id': 0,           # Exclude the '_id' field
        'ImageName': 1,  # Include 'column_name1'
    }
    
   

    #db에 아무것도 안들어있을 경우를 대비한 예외처리
    while True:
        list_data = []
        while not list_data:
            time.sleep(3)
            data = collection.find({}, projection)
            list_data = list(data)
        # Iterate over the data
        docker_img_name = list_data[0]['ImageName']
        print(docker_img_name)
        
        find_img = static_analysis.static_analysis(docker_img_name)   
        if (find_img == 'error'):
            print('test')
            # Define the filter to spe cify the documents to update
            filter = {'ImageName': docker_img_name}
            # Perform the update operation
            result = collection.delete_one(filter)
            print('finish-test')
        else:
            sandbox.run_sandbox(docker_img_name)
            report.make_report(docker_img_name)
            # Define the filter to spe cify the documents to update
            filter = {'ImageName': docker_img_name}

            # Perform the update operation
            result = collection.delete_one(filter)
            # Print the number of documents updated
            print('Documents updated:', result.deleted_count)

            # Close the connection
main()
