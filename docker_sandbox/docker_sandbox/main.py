import subprocess
import time
import paramiko

def subprocess_open(command):
    popen = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    #subprocess.popen함수로 시스템 명령어 실행
    (stdoutdata, stderrdata) = popen.communicate()
    return stdoutdata
    #결과값 stdoutdata로 return

def ssh_connect(server,user_name,pass_word):
    cli = paramiko.SSHClient()
    cli.set_missing_host_key_policy(paramiko.AutoAddPolicy)
    cli.connect(server, port=22, username=user_name, password=pass_word)
    return cli

def run_virtualbox(vm_name):
    if subprocess_open('vboxmanage list runningvms') == b'':
        subprocess_open("vboxmanage startvm "+vm_name+" --type gui")

    #켜질때까지 기다리는 구문
    stdoutdata = b''
    while stdoutdata == b'':
        stdoutdata = subprocess_open('VBoxManage guestcontrol \'sandbox_ubuntu\' run --exe /sbin/ifconfig --username \"sandguest\" --password \"sandGuest1234\" -- -a')
        #정상적으로 연결되는지 확인용. ifconfig 실행 후, 결과 return되면 정상연결로 간주
        time.sleep(5)

def main():
    vm_name = "sandbox_ubuntu"
    username = "sandguest"
    password = "sandGuest1234"
    server = '192.168.121.129'  # 호스트명이나 IP 주소

    run_virtualbox(vm_name)
    #virtualbox 실행 후 생성해놓은 이미지 실행 켜질때까지 반복 확인 

    cli = ssh_connect(server,username,password)
    #ip,username,password입력 후 ssh client 연결, 이후 세션 반환

    stdin, stdout, stderr = cli.exec_command("ls -la")
    lines = stdout.readlines()
    print(''.join(lines))
    
    cli.close()
    #ssh client 연결 종료
    #print(stdoutdata)


main()

